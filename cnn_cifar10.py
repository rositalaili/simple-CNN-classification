# -*- coding: utf-8 -*-
"""CNN_Cifar10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PzukzLUrTct__-LrONVg_2tzsmjckgJp

## Project Object Recognition in Photographs

Load Dataset dan Library
"""

import matplotlib.pyplot as plt
import numpy as np
import tensorflow as tf
from keras.datasets import cifar10
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Dropout
from keras.layers import Flatten
from keras.constraints import maxnorm
# from keras.optimizers import SGD
from keras.layers.convolutional import Conv2D
from keras.layers.convolutional import MaxPooling2D
from keras.utils import np_utils
# from keras import backend as K

#Load Data
(X_train, y_train), (X_test, y_test) = cifar10.load_data()

for i in range(0, 9):
  plt.subplot(330 + 1 + i)
  plt.imshow(X_train[i])
# show the plot
plt.show()

for i in range(0, 9):
  print('Label dari foto tersebut adalah', y_train[i])

# fix random seed for reproducibility
seed = 7
np.random.seed(seed)

#normalize inputs from 0-255 to 0.0-1.0
X_train = X_train.astype('float32')
X_test = X_test.astype('float32')
X_train = X_train / 255.0
X_test = X_test / 255.0

# one hot encode outputs (mengubah outputs menjadi 1 0 0 ..., 0 1 0 ... dst)
y_train = np_utils.to_categorical(y_train)
y_test = np_utils.to_categorical(y_test)
num_classes = y_test.shape[1]
print(num_classes)

X_train.shape

X_test.shape

#Membuat model yang lebih besar
model2 = Sequential()
#Convolution layer 1
model2.add(Conv2D(32, (3, 3), input_shape=(32, 32, 3), padding='same', activation='relu'))
model2.add(Dropout(0.2))
#Convolution layer 2
model2.add(Conv2D(32, (3, 3), activation='relu', padding='same'))
model2.add(MaxPooling2D(pool_size=(2, 2)))
#Convolution layer 3
model2.add(Conv2D(64, (3, 3), activation='relu', padding='same'))
model2.add(Dropout(0.2))
#Convolution layer 4
model2.add(Conv2D(64, (3, 3), activation='relu', padding='same'))
model2.add(MaxPooling2D(pool_size=(2, 2)))
#Convolution layer 5
model2.add(Conv2D(128, (3, 3), activation='relu', padding='same'))
model2.add(Dropout(0.2))
#Convolution layer 6
model2.add(Conv2D(128, (3, 3), activation='relu', padding='same'))
model2.add(MaxPooling2D(pool_size=(2, 2)))
model2.add(Flatten())
model2.add(Dropout(0.2))
#Hidden Layer 1 - bobot (fully connected layer)
model2.add(Dense(1024, activation='relu', kernel_constraint=maxnorm(3)))
model2.add(Dropout(0.2))
#Hidden Layer 2 - bobot (fully connected layer)
model2.add(Dense(512, activation='relu', kernel_constraint=maxnorm(3)))
model2.add(Dropout(0.2))
#Output Layer
model2.add(Dense(num_classes, activation='softmax'))

# Compile model
model2.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model2.summary()

# Fit the model
model2.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=40, batch_size=64, verbose=1)

# Final evaluation of the model
scores = model2.evaluate(X_test, y_test, verbose=0)
print("Accuracy: %.2f%%" % (scores[1]*100))

predic = model2.predict([X_test])
print(predic)
for i in range(0, 6):
  print(np.argmax(predic[10+i]), "Sebenarnya adalah ", y_test[10+i])

from PIL import Image

# Commented out IPython magic to ensure Python compatibility.
from google.colab import files
from keras.preprocessing import image
import matplotlib.image as mpimg
import cv2
# %matplotlib inline
print("Masukkan gambar")
uploaded = files.upload()

for fn in uploaded.keys():

# predicting images
  path = fn
  img_arr=[]
  img = Image.open(path)
  img = np.array(img.resize((32, 32)))
  img_arr.append(img)
  img_arr = np.array(img_arr)
  plt.imshow(img_arr[0])
  plt.show()

  classes = model2.predict(img_arr)
  output = np.argmax(classes)
  #x = image.img_to_array(img)
  #x = np.expand_dims(x, axis=0)

  #images = np.vstack([x])
  # print(fn)
  if output==0:
    print('Hasil Pengenalan : airplane')
  elif output==1:
    print('Hasil Pengenalan : automobile')
  elif output==2:
    print('Hasil Pengenalan :bird')
  elif output==3:
    print('Hasil Pengenalan : cat')
  elif output==4:
    print('Hasil Pengenalan : deer')
  elif output==5:
    print('Hasil Pengenalan : dog')
  elif output==6:
    print('Hasil Pengenalan : frog')
  elif output==7:
    print('Hasil Pengenalan : horse')
  elif output==8:
    print('Hasil Pengenalan : ship')
  else:
    print('Hasil Pengenalan :truck')